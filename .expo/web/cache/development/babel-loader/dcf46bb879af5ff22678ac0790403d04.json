{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/douglas/Douglas/lumero/mobile/src/view/Onboarding/Pagination.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport default Paginator = function Paginator(_ref) {\n  var data = _ref.data,\n      scrollx = _ref.scrollx;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, data.map(function (_, i) {\n    var inputRange = [(i - 1) * width, i * width, (i + 1) * width];\n    var dotWidth = scrollx.interpolate({\n      inputRange: inputRange,\n      outputRange: [10, 20, 10],\n      extrapolate: \"clamp\"\n    });\n    var opacity = scrollx.interpolate({\n      inputRange: inputRange,\n      outputRange: [0.3, 1, 0.3],\n      extrapolate: \"clamp\"\n    });\n    return React.createElement(Animated.View, {\n      style: [styles.dot, {\n        width: dotWidth,\n        opacity: opacity,\n        transition: 0.3\n      }],\n      key: i.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    });\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  dot: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: \"#4477FF\",\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["/home/douglas/Douglas/lumero/mobile/src/view/Onboarding/Pagination.js"],"names":["React","Paginator","data","scrollx","useWindowDimensions","width","styles","container","map","_","i","inputRange","dotWidth","interpolate","outputRange","extrapolate","opacity","dot","transition","toString","StyleSheet","create","flexDirection","justifyContent","alignItems","height","borderRadius","backgroundColor","marginHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,eAAeC,SAAS,GAAG,yBAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAChD,6BAAkBC,mBAAmB,EAArC;AAAA,MAAQC,KAAR,wBAAQA,KAAR;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,GAAL,CAAS,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClB,QAAMC,UAAU,GAAG,CAAC,CAACD,CAAC,GAAG,CAAL,IAAUL,KAAX,EAAkBK,CAAC,GAAGL,KAAtB,EAA6B,CAACK,CAAC,GAAG,CAAL,IAAUL,KAAvC,CAAnB;AAEA,QAAMO,QAAQ,GAAGT,OAAO,CAACU,WAAR,CAAoB;AACnCF,MAAAA,UAAU,EAAVA,UADmC;AAEnCG,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAFsB;AAGnCC,MAAAA,WAAW,EAAE;AAHsB,KAApB,CAAjB;AAMA,QAAMC,OAAO,GAAGb,OAAO,CAACU,WAAR,CAAoB;AAClCF,MAAAA,UAAU,EAAVA,UADkC;AAElCG,MAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAFqB;AAGlCC,MAAAA,WAAW,EAAE;AAHqB,KAApB,CAAhB;AAMA,WACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE,CAACT,MAAM,CAACW,GAAR,EAAa;AAAEZ,QAAAA,KAAK,EAAEO,QAAT;AAAmBI,QAAAA,OAAO,EAAPA,OAAnB;AAA4BE,QAAAA,UAAU,EAAE;AAAxC,OAAb,CADT;AAEE,MAAA,GAAG,EAAER,CAAC,CAACS,QAAF,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GArBA,CADH,CADF;AA0BD,CA7BD;AA+BA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAO/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,YAAY,EAAE,CAFX;AAGHC,IAAAA,eAAe,EAAE,SAHd;AAIHC,IAAAA,gBAAgB,EAAE;AAJf;AAP0B,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Animated, useWindowDimensions } from \"react-native\";\n\nexport default Paginator = ({ data, scrollx }) => {\n  const { width } = useWindowDimensions();\n\n  return (\n    <View style={styles.container}>\n      {data.map((_, i) => {\n        const inputRange = [(i - 1) * width, i * width, (i + 1) * width];\n\n        const dotWidth = scrollx.interpolate({\n          inputRange,\n          outputRange: [10, 20, 10],\n          extrapolate: \"clamp\",\n        });\n\n        const opacity = scrollx.interpolate({\n          inputRange,\n          outputRange: [0.3, 1, 0.3],\n          extrapolate: \"clamp\",\n        });\n\n        return (\n          <Animated.View\n            style={[styles.dot, { width: dotWidth, opacity, transition: 0.3 }]}\n            key={i.toString()}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  dot: {\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: \"#4477FF\",\n    marginHorizontal: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}