{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/douglas/Douglas/lumero/mobile/src/context/musicPlayer.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, createContext, useContext } from \"react\";\nimport { Audio } from \"expo-av\";\nvar PlayerContext = createContext({});\nexport var PlayerProvider = function PlayerProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      playbackObj = _useState2[0],\n      setPlaybackObj = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioObj = _useState4[0],\n      setAudioObj = _useState4[1];\n\n  useEffect(function () {\n    var playbackObject = new Audio.Sound();\n    setPlaybackObj(playbackObject);\n  }, []);\n\n  function onPlaybackStatusUpdate() {\n    return _regeneratorRuntime.async(function onPlaybackStatusUpdate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setAudioObj;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(playbackObj.getStatusAsync());\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function onDraggingTrackerAudio(millies) {\n    return _regeneratorRuntime.async(function onDraggingTrackerAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(playbackObj.setPositionAsync(millies));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function loadAudioAsync(_ref2) {\n    var uri, _await$playbackObj$ge, isLoaded, audioObject;\n\n    return _regeneratorRuntime.async(function loadAudioAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            uri = _ref2.uri;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(playbackObj.getStatusAsync());\n\n          case 3:\n            _await$playbackObj$ge = _context3.sent;\n            isLoaded = _await$playbackObj$ge.isLoaded;\n\n            if (isLoaded) {\n              _context3.next = 13;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(playbackObj.loadAsync({\n              uri: uri\n            }));\n\n          case 8:\n            audioObject = _context3.sent;\n            setAudioObj(audioObject);\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(setupTrackerBar());\n\n          case 12:\n            return _context3.abrupt(\"return\");\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function unloadComponent() {\n    return _regeneratorRuntime.async(function unloadComponent$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(playbackObj.unloadAsync());\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function setupTrackerBar() {\n    return _regeneratorRuntime.async(function setupTrackerBar$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(playbackObj.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function playAudioAsync() {\n    return _regeneratorRuntime.async(function playAudioAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!audioObj.isPlaying) {\n              _context6.next = 8;\n              break;\n            }\n\n            _context6.t0 = setAudioObj;\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(playbackObj.setStatusAsync({\n              shouldPlay: false\n            }));\n\n          case 4:\n            _context6.t1 = _context6.sent;\n            (0, _context6.t0)(_context6.t1);\n            _context6.next = 13;\n            break;\n\n          case 8:\n            _context6.t2 = setAudioObj;\n            _context6.next = 11;\n            return _regeneratorRuntime.awrap(playbackObj.playAsync());\n\n          case 11:\n            _context6.t3 = _context6.sent;\n            (0, _context6.t2)(_context6.t3);\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(PlayerContext.Provider, {\n    value: {\n      loadAudioAsync: loadAudioAsync,\n      playAudioAsync: playAudioAsync,\n      audioStats: audioObj,\n      onDraggingTrackerAudio: onDraggingTrackerAudio\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport function usePlayer() {\n  var context = useContext(PlayerContext);\n  return context;\n}","map":{"version":3,"sources":["/home/douglas/Douglas/lumero/mobile/src/context/musicPlayer.js"],"names":["React","useState","useEffect","createContext","useContext","Audio","PlayerContext","PlayerProvider","children","playbackObj","setPlaybackObj","audioObj","setAudioObj","playbackObject","Sound","onPlaybackStatusUpdate","getStatusAsync","onDraggingTrackerAudio","millies","setPositionAsync","loadAudioAsync","uri","isLoaded","loadAsync","audioObject","setupTrackerBar","unloadComponent","unloadAsync","setOnPlaybackStatusUpdate","playAudioAsync","isPlaying","setStatusAsync","shouldPlay","playAsync","audioStats","usePlayer","context"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from \"react\";\n\nimport { Audio } from \"expo-av\";\n\nconst PlayerContext = createContext({});\n\nexport const PlayerProvider = ({ children }) => {\n  const [playbackObj, setPlaybackObj] = useState({});\n  const [audioObj, setAudioObj] = useState({});\n\n  useEffect(() => {\n    let playbackObject = new Audio.Sound();\n    setPlaybackObj(playbackObject);\n  }, []);\n\n  async function onPlaybackStatusUpdate() {\n    setAudioObj(await playbackObj.getStatusAsync());\n  }\n\n  async function onDraggingTrackerAudio(millies) {\n    await playbackObj.setPositionAsync(millies);\n  }\n\n  async function loadAudioAsync({ uri }) {\n    const { isLoaded } = await playbackObj.getStatusAsync();\n\n    if (!isLoaded) {\n      let audioObject = await playbackObj.loadAsync({ uri });\n\n      setAudioObj(audioObject);\n      await setupTrackerBar();\n      return;\n    }\n  }\n\n  async function unloadComponent() {\n    await playbackObj.unloadAsync();\n  }\n\n  async function setupTrackerBar() {\n    await playbackObj.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n  }\n\n  async function playAudioAsync() {\n    audioObj.isPlaying\n      ? setAudioObj(await playbackObj.setStatusAsync({ shouldPlay: false }))\n      : setAudioObj(await playbackObj.playAsync());\n  }\n\n  return (\n    <PlayerContext.Provider\n      value={{\n        loadAudioAsync,\n        playAudioAsync,\n        audioStats: audioObj,\n        onDraggingTrackerAudio,\n      }}\n    >\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nexport function usePlayer() {\n  const context = useContext(PlayerContext);\n\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}